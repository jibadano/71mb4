{"version":3,"file":"custom-validators.js","sourceRoot":"","sources":["../src/custom-validators.ts"],"names":[],"mappings":"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","sourcesContent":["import { ValidatorFn, AbstractControl, Validators } from '@angular/forms';\n\nimport { isPresent, isString } from './lang';\n\nexport type EqualValueType = string | boolean | number;\n\nexport class CustomValidators {\n    /**\n     * Validator that requires controls to have a value of a range length.\n     */\n    static rangeLength(rangeLength: Array<number>): ValidatorFn {\n        return (control: AbstractControl): {[key: string]: any} => {\n            if (isPresent(Validators.required(control))) return null;\n\n            let v: string = control.value;\n            return v.length >= rangeLength[0] && v.length <= rangeLength[1] ? null : {'rangeLength': true};\n        };\n    }\n\n    /**\n     * Validator that requires controls to have a value of a min value.\n     */\n    static min(min: number): ValidatorFn {\n        return (control: AbstractControl): {[key: string]: any} => {\n            if (isPresent(Validators.required(control))) return null;\n\n            let v: number = control.value;\n            return v >= min ? null : {'min': true};\n        };\n    }\n\n    /**\n     * Validator that requires controls to have a value of a max value.\n     */\n    static max(max: number): ValidatorFn {\n        return (control: AbstractControl): {[key: string]: any} => {\n            if (isPresent(Validators.required(control))) return null;\n\n            let v: number = control.value;\n            return v <= max ? null : {'max': true};\n        };\n    }\n\n    /**\n     * Validator that requires controls to have a value of a range value.\n     */\n    static range(range: Array<number>): ValidatorFn {\n        return (control: AbstractControl): {[key: string]: any} => {\n            if (isPresent(Validators.required(control))) return null;\n\n            let v: number = control.value;\n            return v >= range[0] && v <= range[1] ? null : {'range': true};\n        };\n    }\n\n    /**\n     * Validator that requires controls to have a value of digits.\n     */\n    static digits(control: AbstractControl): {[key: string]: boolean} {\n        if (isPresent(Validators.required(control))) return null;\n\n        let v: string = control.value;\n        return /^\\d+$/.test(v) ? null : {'digits': true};\n    }\n\n    /**\n     * Validator that requires controls to have a value of number.\n     */\n    static number(control: AbstractControl): {[key: string]: boolean} {\n        if (isPresent(Validators.required(control))) return null;\n\n        let v: string = control.value;\n        return /^(?:-?\\d+|-?\\d{1,3}(?:,\\d{3})+)?(?:\\.\\d+)?$/.test(v) ? null : {'number': true};\n    }\n\n    /**\n     * Validator that requires controls to have a value of url.\n     */\n    static url(control: AbstractControl): {[key: string]: boolean} {\n        if (isPresent(Validators.required(control))) return null;\n\n        let v: string = control.value;\n        return /^(?:(?:(?:https?|ftp):)?\\/\\/)(?:\\S+(?::\\S*)?@)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})).?)(?::\\d{2,5})?(?:[/?#]\\S*)?$/i.test(v) ? null : {'url': true};\n    }\n\n    /**\n     * Validator that requires controls to have a value of email.\n     */\n    static email(control: AbstractControl): {[key: string]: boolean} {\n        if (isPresent(Validators.required(control))) return null;\n\n        let v: string = control.value;\n        return /^[a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/.test(v) ? null : {'email': true};\n    }\n\n    /**\n     * Validator that requires controls to have a value of date.\n     */\n    static date(control: AbstractControl): {[key: string]: boolean} {\n        if (isPresent(Validators.required(control))) return null;\n\n        let v: string = control.value;\n        return !/Invalid|NaN/.test(new Date(v).toString()) ? null : {'date': true};\n    }\n\n    /**\n     * Validator that requires controls to have a value of dateISO.\n     */\n    static dateISO(control: AbstractControl): {[key: string]: boolean} {\n        if (isPresent(Validators.required(control))) return null;\n\n        let v: string = control.value;\n        return /^\\d{4}[\\/\\-](0?[1-9]|1[012])[\\/\\-](0?[1-9]|[12][0-9]|3[01])$/.test(v) ? null : {'dateISO': true};\n    }\n\n    /**\n     * Validator that requires controls to have a value of creditCard.\n     */\n    static creditCard(control: AbstractControl): {[key: string]: boolean} {\n        if (isPresent(Validators.required(control))) return null;\n\n        let v: string = control.value;\n\n        let sanitized = v.replace(/[^0-9]+/g, '');\n\n        // problem with chrome\n        if (!(/^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\\d{3})\\d{11})$/.test(sanitized))) {\n            return {'creditCard': true};\n        }\n\n        let sum = 0;\n        let digit;\n        let tmpNum;\n        let shouldDouble;\n        for (let i = sanitized.length - 1; i >= 0; i--) {\n            digit = sanitized.substring(i, (i + 1));\n            tmpNum = parseInt(digit, 10);\n            if (shouldDouble) {\n                tmpNum *= 2;\n                if (tmpNum >= 10) {\n                    sum += ((tmpNum % 10) + 1);\n                } else {\n                    sum += tmpNum;\n                }\n            } else {\n                sum += tmpNum;\n            }\n            shouldDouble = !shouldDouble;\n        }\n\n        if (Boolean((sum % 10) === 0 ? sanitized : false)) {\n            return null;\n        }\n\n        return {'creditCard': true};\n    }\n\n    /**\n     * Validator that requires controls to have a value of JSON.\n     */\n    static json(control: AbstractControl): {[key: string]: boolean} {\n        if (isPresent(Validators.required(control))) return null;\n\n        let v: string = control.value;\n\n        try {\n            let obj = JSON.parse(v);\n\n            if (Boolean(obj) && typeof obj === 'object') {\n                return null;\n            }\n        } catch (e) {\n        }\n        return {'json': true};\n    }\n\n    /**\n     * Validator that requires controls to have a value of base64.\n     */\n    static base64(control: AbstractControl): {[key: string]: boolean} {\n        if (isPresent(Validators.required(control))) return null;\n\n        let v: string = control.value;\n        return /^(?:[A-Z0-9+\\/]{4})*(?:[A-Z0-9+\\/]{2}==|[A-Z0-9+\\/]{3}=|[A-Z0-9+\\/]{4})$/i.test(v) ? null : {'base64': true};\n    }\n\n    /**\n     * Validator that requires controls to have a value of phone.\n     */\n    static phone(locale?: string): ValidatorFn {\n        const phones = {\n            'zh-CN': /^(\\+?0?86\\-?)?((13\\d|14[57]|15[^4,\\D]|17[678]|18\\d)\\d{8}|170[059]\\d{7})$/,\n            'zh-TW': /^(\\+?886\\-?|0)?9\\d{8}$/,\n            'en-ZA': /^(\\+?27|0)\\d{9}$/,\n            'en-AU': /^(\\+?61|0)4\\d{8}$/,\n            'en-HK': /^(\\+?852\\-?)?[569]\\d{3}\\-?\\d{4}$/,\n            'fr-FR': /^(\\+?33|0)[67]\\d{8}$/,\n            'de-DE': /^(\\+?49|0)[1-9]\\d{10}$/,\n            'pt-PT': /^(\\+351)?9[1236]\\d{7}$/,\n            'el-GR': /^(\\+?30)?(69\\d{8})$/,\n            'en-GB': /^(\\+?44|0)7\\d{9}$/,\n            'en-US': /^(\\+?1)?[2-9]\\d{2}[2-9](?!11)\\d{6}$/,\n            'en-ZM': /^(\\+26)?09[567]\\d{7}$/,\n            'ru-RU': /^(\\+?7|8)?9\\d{9}$/,\n            'nb-NO': /^(\\+?47)?[49]\\d{7}$/,\n            'nn-NO': /^(\\+?47)?[49]\\d{7}$/,\n            'vi-VN': /^(0|\\+?84)?((1(2([0-9])|6([2-9])|88|99))|(9((?!5)[0-9])))([0-9]{7})$/,\n            'en-NZ': /^(\\+?64|0)2\\d{7,9}$/\n        };\n\n        return (control: AbstractControl): {[key: string]: any} => {\n            if (isPresent(Validators.required(control))) return null;\n\n            let v: string = control.value;\n            let pattern = phones[locale] || phones['en-US'];\n\n            return (new RegExp(pattern)).test(v) ? null : {'phone': true};\n        };\n    }\n\n    /**\n     * Validator that requires controls to have a value of uuid.\n     */\n    static uuid(version?: string): ValidatorFn {\n        const uuid = {\n            '3': /^[0-9A-F]{8}-[0-9A-F]{4}-3[0-9A-F]{3}-[0-9A-F]{4}-[0-9A-F]{12}$/i,\n            '4': /^[0-9A-F]{8}-[0-9A-F]{4}-4[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i,\n            '5': /^[0-9A-F]{8}-[0-9A-F]{4}-5[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i,\n            'all': /^[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}$/i\n        };\n\n        return (control: AbstractControl): {[key: string]: any} => {\n            if (isPresent(Validators.required(control))) return null;\n\n            let v: string = control.value;\n            let pattern = uuid[version] || uuid.all;\n\n            return (new RegExp(pattern)).test(v) ? null : {'uuid': true};\n        };\n    }\n\n    /**\n     * Validator that requires controls to have a value to equal another value.\n     */\n    static equal(str: EqualValueType): ValidatorFn {\n        return (control: AbstractControl): {[key: string]: any} => {\n            if (isPresent(Validators.required(control))) return null;\n\n            let v: string = control.value;\n\n            return str === v ? null : {equal: true};\n        };\n    }\n\n    /**\n     * Validator that requires controls to have a value to equal another control.\n     */\n    static equalTo(equalControl: AbstractControl): ValidatorFn {\n        return (control: AbstractControl): {[key: string]: any} => {\n            if (isPresent(Validators.required(control))) return null;\n\n            let v: string = control.value;\n\n            return equalControl.value === v ? null : {equalTo: true};\n        };\n    }\n}"]}